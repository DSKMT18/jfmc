import { Telegraf, Markup, Scenes, session } from 'telegraf';
import 'dotenv/config';
import { freeRanks } from './modules/freeranks.js';
import { ranks } from './modules/ranks.js';
import { buyRank, buyRankScene } from './modules/buyrank.js';
import { setupBuyRankHandlers } from './modules/buyrankHandlers.js';
import { salaries } from './modules/salaries.js';

const Bot = new Telegraf(process.env.BOT_TOKEN);

// Middleware
Bot.use(session());
const stage = new Scenes.Stage([buyRankScene]);
Bot.use(stage.middleware());

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const pendingReasons = new Map();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
Bot.start(async (ctx) => {
   // –ò–∑–º–µ–Ω–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ü–µ–Ω–µ
   if (ctx.scene.current) {
      await ctx.reply(
         '–í—ã —Å–µ–π—á–∞—Å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–∫—É–ø–∫–∏ —Ä–∞–Ω–≥–∞. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ–≥–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel.',
         Markup.inlineKeyboard([Markup.button.callback('–û—Ç–º–µ–Ω–∞', 'cancel')])
      );
      return;
   }

   if (ctx.chat.id != process.env.GROUP_ID) {
      ctx.replyWithHTML(
         `–ü—Ä–∏–≤–µ—Ç, <b>${ctx.from.first_name} ${ctx.from.last_name || ''}</b>`,
         Markup.keyboard([
            ['üíé –ö—É–ø–∏—Ç—å —Ä–∞–Ω–≥', 'üéÆ Discord', 'üí∞ –ó–∞—Ä–ø–ª–∞—Ç—ã'],
            ['üî∞ –°–≤–æ–±–æ–¥–Ω—ã–µ —Ä–∞–Ω–≥–∏', 'üè∑ –¶–µ–Ω—ã –Ω–∞ —Ä–∞–Ω–≥–∏']
         ]).resize(true)
      );
   } else {
      ctx.reply('–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @jfmc_robot');
   }
});

// –î–æ–±–∞–≤–ª–µ–Ω–æ: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel
Bot.command('cancel', async (ctx) => {
   if (ctx.scene.current) {
      await ctx.reply('–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ —Ä–∞–Ω–≥–∞ –æ—Ç–º–µ–Ω–µ–Ω.');
      await ctx.scene.leave();
   } else {
      await ctx.reply('–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–∫—É–ø–∫–∏.');
   }
});

// /myid
Bot.command('myid', async (ctx) => {
   await ctx.reply(String(ctx.chat.id));
});

// –ú–µ–Ω—é + –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏—á–∏–Ω
Bot.on('text', async (ctx, next) => {
   // –ò–∑–º–µ–Ω–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å—Ü–µ–Ω–µ
   if (ctx.scene.current) {
      await ctx.reply(
         '–í—ã —Å–µ–π—á–∞—Å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–∫—É–ø–∫–∏ —Ä–∞–Ω–≥–∞. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ–≥–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel.',
         Markup.inlineKeyboard([Markup.button.callback('–û—Ç–º–µ–Ω–∞', 'cancel')])
      );
      return;
   }

   const text = ctx.message.text;

   // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
   switch (text) {
      case 'üî∞ –°–≤–æ–±–æ–¥–Ω—ã–µ —Ä–∞–Ω–≥–∏':
         await freeRanks(Bot, ctx.chat.id);
         break;
      case 'üè∑ –¶–µ–Ω—ã –Ω–∞ —Ä–∞–Ω–≥–∏':
         await ranks(Bot, ctx.chat.id);
         break;
      case 'üíé –ö—É–ø–∏—Ç—å —Ä–∞–Ω–≥':
         await buyRank(ctx);
         break;
      case 'üéÆ Discord':
         await ctx.reply('Discord –ë–æ–ª—å–Ω–∏—Ü—ã: https://discord.gg/8xs4Z9YDgs');
         break;
      case 'üí∞ –ó–∞—Ä–ø–ª–∞—Ç—ã':
         await salaries(Bot, ctx.chat.id);
         break;
      default:
         return next();
   }
});

setupBuyRankHandlers(Bot, pendingReasons);

// –ó–∞–ø—É—Å–∫
Bot.launch().then(console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
Bot.catch((err, ctx) => {
   console.error('–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:', err);
   ctx.reply?.('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});